<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Imc', 'doctrine');

/**
 * BaseImc
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $usuario_id
 * @property float $imc
 * @property timestamp $fecha_reg
 * @property Usuario $Usuario
 * 
 * @method integer   getId()         Returns the current record's "id" value
 * @method integer   getUsuarioId()  Returns the current record's "usuario_id" value
 * @method float     getImc()        Returns the current record's "imc" value
 * @method timestamp getFechaReg()   Returns the current record's "fecha_reg" value
 * @method Usuario   getUsuario()    Returns the current record's "Usuario" value
 * @method Imc       setId()         Sets the current record's "id" value
 * @method Imc       setUsuarioId()  Sets the current record's "usuario_id" value
 * @method Imc       setImc()        Sets the current record's "imc" value
 * @method Imc       setFechaReg()   Sets the current record's "fecha_reg" value
 * @method Imc       setUsuario()    Sets the current record's "Usuario" value
 * 
 * @package    galeno
 * @subpackage model
 * @author     Enimados
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseImc extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('imc');
        $this->hasColumn('id', 'integer', 6, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 6,
             ));
        $this->hasColumn('usuario_id', 'integer', 6, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 6,
             ));
        $this->hasColumn('imc', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('fecha_reg', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Usuario', array(
             'local' => 'usuario_id',
             'foreign' => 'id'));
    }
}