/*
 * inicio.class
 *
 * Versión 4.2
 *
 * 25 de Noviembre de 2013
 *
 * Para uso exclusivo de 1,2,3 y Gana 
 */

import boleto;
 
/**
 * La clase inicio ofrece la inicialización del tablero de juego con todas sus variables, incluyendo los tres juegos que permite la aplicación.
 */
public class inicio 
{
    var nroBoletos:Number=0;
    var nroJugadas;
    var esElFin=false;
    var estatus:Number= new Number;
    var idVenta:Number= new Number;
    var token:String=new String;  
    var server:String=new String;  
    var cadPremioA:String=new String;

    var bingoMontos:Array = new Array(7);
    var dadoMontos:Array = new Array(7);
    var zodiacoMontos:Array = new Array(4);
    var zodiacoTexto:Array = new Array(15);

    var hilo = setInterval(contador, 130000); 
    var myArray:Array=new Array;

    var indice:Number = new Number;
    var bloquear:Boolean = new Boolean;

    var indiceT:Number = new Number;
    var indice1:Number = new Number;
    var indice2:Number = new Number;
    var indice3:Number = new Number;
    var indice1T:Number = new Number;
    var indice2T:Number = new Number;
    var indice3T:Number = new Number;
    var boletoT:Number = new Number;
    var premioA:Number = new Number;
    var premioC:String = new String;
    var premioR:Number = new Number;
    var errorXML:Boolean = new Boolean;

    
    function inicio():Void 
    {
        nroBoletos=0;
        hilo = setInterval(contador, 130000); 
        errorXML=false;
        nroBoletos=0;
        
        indice=0;
        premioA=0;
        premioR=0;
        premioC="";
        bloquear=errorXML;
        boletoT=0;
        indice1=indice2=indice2=indice1T=indice2T=indice3T=0;
            
        llenarToken();
       
        fscommand("fullscreen", "true");
        stage.stopAllSounds();
        stage.showMenu = false;	
        stage.showDefaultContextMenu = false;
        allowScriptAccess="always";
        Mouse.addListener(raton);
    }

    function franjaVisible():Void
    {
        for (var i=0;i<25;i++) this["fr"+i]._visible=false;
    }

    function buscarArreglo (input:String):Boolean
    {
        for (var i=0; i < raspados.length; i++) 
        {
            if (raspados[i] == input) 
                return true;			
        }
        return false;
    }
    function buscarArreglo2 (input:String, myArray:Array):Boolean
    {
        
        for (var i=0; i < myArray.length; i++) 
            if (myArray[i] == input) 
                return true;		
        return false;
    }

    function darBoleto(i:Number):boleto
    {
        return _root["boleto"+i];
    }
    function raspar(numes:Array, i:Number, nroJugada:Number):Void
    {
        if(!buscarArreglo(numes[i]))
        {
            this["carton"]["r"+numes[i]].play();
            raspados.push(numes[i]);			
        }	
    }

    function verificarGanadorOLD():Number
    {
        var cont1, cont2, cont3, e:Number;
        cont1=cont2=cont3=e=0;
        for (var i = 0; i <5; i++) 
            if (ganador1[i] ==1) cont1++;
        for (var i = 0; i <5; i++) 
            if (ganador2[i] ==1) cont2++;
        for (var i = 0; i <5; i++) 
            if (ganador3[i] ==1) cont3++;
        if (cont2==5 && ganador1[3]==1 && ganador3[3]==1)
            e=1; //ganador en cruz
        else if (ganador1[0]==1 && ganador2[2]==1 && ganador3[4]==1)
            e=2; //ganador diagonal de izquierda a derecha
        else if (ganador1[4]==1 && ganador2[2]==1 && ganador3[0]==1)
            e=3; //ganador diagonal de derecha a izquierda 
        else if (cont1==5)
            e=4; //ganador fila 1
        else if (cont2==5)
            e=5; //ganador fila 2
        else if (cont3==5)
            e=6; //ganador fila 3
        else if (ganador1[0]==1 && ganador2[0]==1 && ganador3[0]==1)
            e=7; //ganador columna 1
        else if (ganador1[1]==1 && ganador2[1]==1 && ganador3[1]==1)
            e=8; //anador columna 2	
        else if (ganador1[2]==1 && ganador2[2]==1 && ganador3[2]==1)
            e=9; //ganador columna 3
        else if (ganador1[3]==1 && ganador2[3]==1 && ganador3[3]==1)
            e=10; //ganador columna 4			
        else if (ganador1[4]==1 && ganador2[4]==1 && ganador3[4]==1)
            e=11; //ganador columna 5				
        return(e);
    }

    function llenarRaspadito (ind:Number):Void
    {
        ////trace (this["btnRas"+ind]["r"+ind].txtRasM.text);
        for (var i = 0; i <5; i++)
        {
            this["btnRas"+ind]["r"+(i+1)].txtRasM.text=this["NumRas"+ind][i];
            this["ganador"+ind][i]=0;
        }
    }

    function resaltar (ind:Number):Void
    {	
        for (var i = 1; i <= 75; i++)
        {
            if (tarjeta["t"+i].txtM.text==Numeros[ind])
            {
                tarjeta["t"+i].play();
                break;
            }
        }
    }

    function resaltarRas (ind:Number):Void
    {
        for (var i = 0; i < 15; i++)
            for (var j = 0; j < 5; j++)
                if (this["btnRas"+ind]["r"+(j+1)].txtRasM.text==Numeros[i] && this["ganador"+ind][j]==0)
                {		
                    this["ganador"+ind][j]=1;
                    this["btnRas"+ind]["r"+(j+1)].play(); //ver
                    break;
                }
    }
    
    function llenarCarton(ii:Number, nroJugada:Number)
    {
        for (var j=0;j<24;j++)
        {
            this["carton"]["r"+(j+1)].txtRasM.text=_root["boleto"+ii].getJugada(nroJugada).getPosRaspadito1(j);
            this["bolasTotal"]["bola"+(j+1)].txtBola.text=_root["boleto"+ii].getJugada(nroJugada).getPosDataJugada(j);
        }
    }
    
    function jugadaBingo():Number
    {
        if (indice1>0)
        {
            for (var i=0;i<_root["boleto"+indice].getLenJugada();i++)
            {
                if (String(_root["boleto"+indice].getJugada(i).getTipoJuego())=="bingo" && _root["boleto"+indice].getJugada(i).getActivo())
                {
                    return (i);
                }
            }
        }
        return (-1);
    }
    function jugadaDado():Number
    {
        if (indice2>0)
        {
            for (var i=0;i<_root["boleto"+indice].getLenJugada();i++)
            {
                if (String(_root["boleto"+indice].getJugada(i).getTipoJuego())=="dados" && _root["boleto"+indice].getJugada(i).getActivo())
                {
                    return (i);
                }
            }
        }
        return (-1);
    }
    function jugadaZodiaco():Number
    {
        if (indice3>0)
        {
            for (var i=0;i<_root["boleto"+indice].getLenJugada();i++)
            {
                if (String(_root["boleto"+indice].getJugada(i).getTipoJuego())=="zodiaco" && _root["boleto"+indice].getJugada(i).getActivo())
                {
                    return (i);
                }
            }
        }
        return (-1);
    }

    function llenarBolas(i:Number, nroJugada:Number)
    {
        var cad:String= String(_root["boleto"+i].getJugada(nroJugada).getTipoJuego());
        if (cad =="bingo")
        {
            for (var j=0;j<24;j++)
            {
                this["carton"]["r"+(j+1)].txtRasM.text=_root["boleto"+i].getJugada(nroJugada).getPosRaspadito1(j);
            }
        }
    }

    function llenarMenuPV()
    {
        btnBingo.enabled=false;
        btnDado.enabled=false;
        btnZodiaco.enabled=false;
        indice1=0;
        indice2=0;
        indice3=0;
        nroJugadas();
        if  (indice1>0)
        {
            btnBingo.enabled=true;
        }
        if  (indice2>0)
        {
            btnDado.enabled=true;
        }
        if  (indice3>0)
        {
            btnZodiaco.enabled=true;
        }
        indice1T=indice1;
        indice2T=indice2;
        indice3T=indice3;
        
    }

    function imprimir( ) 
    {
        var pj = new PrintJob();

        if (pj.start()) 
        {                            
            var pw = Number(pj.pageWidth);
            var ph = Number(pj.pageHeight);
            var xpos = 0;
            while (xpos < mcPrinter._width)
            {
                xpos = xpos + pw;
                var ypos = 0;
                while (  ypos < mcPrinter._height)
                {
                    ypos = ypos + ph;
                pj.addPage(mcPrinter, {yMax: ypos + ph-200, yMin: ypos- 980, xMax: xpos + pw-700, xMin: xpos-700}, {printAsBitmap:true}, 1);
                } 
            }
        } 
        pj.send();
        delete pj;
    }


    function fin()
    {
        var cad:String=new String();
        var cad2:String=new String();
        for (var i=1; i<=_root.indiceT;i++)
        {
            for (var b1=0; b1<_root["boleto"+i].getLenJugada();b1++)
            {
                if (b1==0 && i==1){ cad = String(_root["boleto"+i].getJugada(b1).getIdJugada());}
                else {cad+=  ","+ String(_root["boleto"+i].getJugada(b1).getIdJugada());}
                if (String(_root["boleto"+i].getJugada(b1).getActivo())=="true")
                {
                    if (b1==0 && i==1)cad2 =  "0";
                    else  cad2+=  ",0";
                }
                else
                {                    
                    if (b1==0 && i==1)cad2 =  "1";
                    else  cad2+=  ",1";
                })	
            }			
        }
        cad ="http://"+server+"/api/close_game/"+token +"/"+cad+"/"+cad2+"/resultado.xml";
        cadPremioA=cad;

        errorXML=false;
        System.useCodepage=true;
        dataXml=new XML();
        dataXml.ignoreWhite=true;
        dataXml.onLoad=function(paso)	
        {
            if(!paso)
            errorXML=true;
        };	
        dataXml.load(cad);
        gotoAndPlay("Fin",1);
    }

    function llenarMenu()
    {
        btnBingo.enabled=false;
        btnDado.enabled=false;
        btnZodiaco.enabled=false;

        if  (indice1>0)
        {
            btnBingoGris._visible=true;
            btnBingo.enabled=true;
        }
        if  (indice2>0)
        {
            btnDadoGris._visible=true;
            btnDado.enabled=true;
        }
        if  (indice3>0)
        {
            btnZodiacoGris._visible=true;
            btnZodiaco.enabled=true;
        }
    }

    function llenarObjeto()
    {

        var cad4:String=new String;
        var noNull:Boolean=new Boolean;
        var k:Number;
        var nroBoletos2:Number=new Number;
        var cadH:String;
        var ordenV:Number=new Number;

        errorXML=false;
        System.useCodepage=true;
        dataXml=new XML();
        dataXml.ignoreWhite=true;
        noNull=false;
        dataXml.onLoad=function(paso)	
        {
            if(paso)
            {		                
                xmlJugada=this.firstChild.childNodes;
                estatus=xmlJugada[0].firstChild;
                if (estatus==null || estatus=="" || estatus==" ")
                    noNull= true;
                idVenta=xmlJugada[1].firstChild;
                if (idVenta==null || idVenta=="" || idVenta==" ") noNull= true;

                general = new generale (xmlJugada[0].firstChild, xmlJugada[1].firstChild, xmlJugada[2].firstChild, dataXml.firstChild.childNodes[3].childNodes[0].firstChild, dataXml.firstChild.childNodes[3].childNodes[1].firstChild, dataXml.firstChild.childNodes[3].childNodes[2].firstChild, dataXml.firstChild.childNodes[3].childNodes[3].firstChild,  dataXml.firstChild.childNodes[3].childNodes[4].childNodes[0].childNodes[0].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[0].childNodes[1].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[0].childNodes[2].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[0].childNodes[3].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[0].childNodes[4].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[0].childNodes[5].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[0].childNodes[6].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[1].childNodes[0].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[1].childNodes[1].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[1].childNodes[2].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[1].childNodes[3].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[1].childNodes[4].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[1].childNodes[5].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[1].childNodes[6].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[2].childNodes[0].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[2].childNodes[1].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[2].childNodes[2].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[2].childNodes[3].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[2].childNodes[4].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[2].childNodes[5].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[2].childNodes[6].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[2].childNodes[7].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[2].childNodes[8].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[2].childNodes[9].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[2].childNodes[10].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[2].childNodes[11].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[2].childNodes[12].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[2].childNodes[13].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[2].childNodes[14].firstChild, dataXml.firstChild.childNodes[3].childNodes[4].childNodes[2].childNodes[15].firstChild,  dataXml.firstChild.childNodes[4].childNodes[0].firstChild, dataXml.firstChild.childNodes[4].childNodes[1].firstChild, dataXml.firstChild.childNodes[4].childNodes[2].firstChild, dataXml.firstChild.childNodes[4].childNodes[3].firstChild);	
                nroBoletos2=Number(dataXml.firstChild.childNodes.length) ;                
                
                for ( i=0;i<16;i++)
                {
                    if (i<7) 
                    {
                        bingoMontos[i] =String(dataXml.firstChild.childNodes[3].childNodes[4].childNodes[0].childNodes[i].firstChild);
                        dadoMontos[i] =String(dataXml.firstChild.childNodes[3].childNodes[4].childNodes[1].childNodes[i].firstChild);
                    }
                    zodiacoMontos[i] =dataXml.firstChild.childNodes[3].childNodes[4].childNodes[2].childNodes[i].firstChild;
                }
                
                zodiacoTexto[0]="Signo Aire:"; zodiacoTexto[1]="Signo Agua:"; zodiacoTexto[2]="Signo Tierra:"; zodiacoTexto[3]="Signo Fuego:"; zodiacoTexto[4]="Aries:"; zodiacoTexto[5]="Tauro:";
                zodiacoTexto[6]="Geminis:"; zodiacoTexto[7]="Cáncer:"; zodiacoTexto[8]="Leo:"; zodiacoTexto[9]="Virgo:"; zodiacoTexto[10]="Libra:"; zodiacoTexto[11]="Escorpio:";
                zodiacoTexto[12]="Sagitario:"; zodiacoTexto[13]="Capricornio:"; zodiacoTexto[14]="Acuario:"; zodiacoTexto[15]="Piscis:" ;
                
                if (general==null || general==""||  general==" ") noNull= true;
                _global.nroBoletos=nroBoletos2-5; //Menos 5 porque ese es el número de tags anteriores al de boleto.
                
                hh=4; jj=4;
                if (_global.nroBoletos<=10 && _global.nroBoletos>0){
                for (i=5;i<nroBoletos2;i++) //empiezo en 5 porque la etiqueta llamada boleto es la 6ta, y se comienza a enumerar en 0
                {
                    k=0;ordenV=0;
            
                    if ( dataXml.firstChild.childNodes[i].childNodes[4].firstChild!=null)
                        ordenV=dataXml.firstChild.childNodes[i].childNodes[4].firstChild;
                    
                    if (String(dataXml.firstChild.childNodes[i].childNodes[3].firstChild)=="false") // Si está invisible, resto ese boleto al número total de boletos, ya que solo se enumeran los visibles.
                    {	
                        trace ("Er "+dataXml.firstChild.childNodes[i].childNodes[3].firstChild);
                        _global.bGratis++;
                    }
                    _root["boleto"+(i-hh)] =new boleto(dataXml.firstChild.childNodes[i].childNodes[0].firstChild, dataXml.firstChild.childNodes[i].childNodes[1].firstChild, dataXml.firstChild.childNodes[i].childNodes[2].firstChild, String(dataXml.firstChild.childNodes[i].childNodes[3].firstChild), ordenV);		
        
                    
                    for (j=5;j<dataXml.firstChild.childNodes[i].childNodes.length ;j++) //empiezo en 5 porque la etiqueta llamada jugada es la sexta, y se comienza a enumerar en 0
                    {
                        _root["jugada"+(j-jj)]  = new jugada(dataXml.firstChild.childNodes[i].childNodes[j].childNodes[0].firstChild,dataXml.firstChild.childNodes[i].childNodes[j].childNodes[1].firstChild,dataXml.firstChild.childNodes[i].childNodes[j].childNodes[2].firstChild,dataXml.firstChild.childNodes[i].childNodes[j].childNodes[3].firstChild,dataXml.firstChild.childNodes[i].childNodes[j].childNodes[4].firstChild,dataXml.firstChild.childNodes[i].childNodes[j].childNodes[5].firstChild,dataXml.firstChild.childNodes[i].childNodes[j].childNodes[6].firstChild,dataXml.firstChild.childNodes[i].childNodes[j].childNodes[7].firstChild,dataXml.firstChild.childNodes[i].childNodes[j].childNodes[8].firstChild);					
                        _root["boleto"+(i-hh)].setJugada(_root["jugada"+(j-jj)],k);
                        cad4=String(dataXml.firstChild.childNodes[i].childNodes[j].childNodes[1].firstChild);
                        if (cad4=="bingo")
                        {
                            _root["boleto"+(i-hh)].plusNroBingo();
                        }
                        else if (cad4=="dados")
                            _root["boleto"+(i-hh)].plusNroDado();
                        else
                            _root["boleto"+(i-hh)].plusNroRuleta();
                        k++;
                    }								
                }
                }
                else 
                {
                    trace ("muchos boletos");  
                    dataXml.load(cadH="http://"+server+"/api/get_game/"+token +"/boleto.xml"); 
                    errorXML=true;
                }			
            }else 
            {
                errorXML=true;
                trace ("Error en el xml");
            }
        };	
      
        cadH="http://"+server+"/api/get_game/"+token +"/resultado.xml";
        cadH="xml/"+token +"/prueba2.xml";		 
        dataXml.load(cadH+"?"+Math.random());	
    }
    
    function leerObjeto()
    {
        errorXML=false;
        System.useCodepage=true;
        
        dataXml=new XML();
        dataXml.ignoreWhite=true;
        
        dataXml.onLoad=function(paso)	
        {
            if(!paso)
            errorXML=true;
        };	
        
        dataXml.load(cadH+"?"+Math.random());
        
    }
    function llenarToken()
    {
        errorXML=false;

        System.useCodepage=true;
        dataXml=new XML();
        dataXml.ignoreWhite=true;
        dataXml.onLoad=function(paso)	
        {
            if(paso)
            {			
                xmlJugada=this.firstChild.childNodes;
                token=xmlJugada[0].firstChild;
                server = xmlJugada[1].firstChild;			
            }else errorXML=true;
        };	
        dataXml.load('xml/token.xml' );
    }

    function rasparTodo(nroJugada:Number):Void
    {
        var a:String=new String;
        var b:String=new String;

        for (var j=1;j<25;j++)
        {		
            if (this["carton"]["r"+j]._currentframe != 9) this["carton"]["r"+j].gotoAndPlay(2);
            for (var i=0;i<25;i++)
            {	
                a=String(_root["boleto"+indice].getJugada(nroJugada).getPosDataJugada(i));
                b=String(this["carton"]["r"+j].txtRasM.text);			
                
                if (a==b)
                {						
                    trace ("a: "+a+ " b: "+ b+" r" +j); 
                    this["carton"]["r"+j].gotoAndPlay(11);
                }
            }			
        }
        gotoAndPlay("raspado");
    }

    function nroJugadas()
    {
        for (var i=0;i<_root["boleto"+indice].getLenJugada();i++)
        {
            if(_root["boleto"+indice].getJugada(i).getActivo());
            switch (String(_root["boleto"+indice].getJugada(i).getTipoJuego()))
            {
                case "bingo":
                    indice1++;
                break;
                case "dados":
                    indice2++;
                break;
                case "zodiaco":
                    indice3++;
                break;
            }
        }
    }

    /** 
    *   Esta función recibe por parametro el nombre y el correo a guardar 
    */
    function alarmaTrue() {
        /*Creamos una nueva variable de tipo SharedObject, esta sera la
        que nos guarde datos en el disco del usuario*/
        
        var disco_so:SharedObject;
        
        /*El metodo "getLocal" del objeto "SharedObject" me devuelve
        algo asi como un archivo que le pase por parametro, en este
        caso, el archivo se llama "datos", si no existe, lo crea*/
        
        disco_so = SharedObject.getLocal("alarma");
        
        /*Los SharedObjects tiene una colección llamada "data", a esta
        le asignamos todas las variables que vamos a guardar en el 
        archivo, en mi caso les puse "elNombre" y "elCorreo"
        Les asigno los datos que llegaron como parametro de la función*/
        
        disco_so.data.activo = "true";
        
        /*Por ultimo, esa instrucción del SharedObject guarda en el disco
        los datos*/
        
        disco_so.flush();
    }
    
    /**
    * La función de cargar datos me devolvera uno de los datos que le pase
    * por parametro, tenemos dos, un nombre y un correo, asi que dependiendo
    * de lo que le pidamos lo devolvera
    */
    function cargarDatos(dato) {
        //Estas 2 lineas son iguales que en la anterior función
        
        var disco_so:SharedObject;
        
        /*Pero aqui, cuando le pedimos que sabra el archivo "datos", 
        automaticamente carga toda la información contenida en ese archivo*/
        
        disco_so = SharedObject.getLocal("datos");
        
        //Si el parametro que llego fue "nombre"....
        if (dato == "nombre") {
            //Retornara el nombre que guardamos en el archivo
            return disco_so.data.elNombre;
            //Si no, y si en cambio es "correo"
        } else if (dato == "correo") {
            //Retornara el correo guardado
            return disco_so.data.elCorreo;
        }
    }


    function menuJ()
    {
        gotoAndPlay("Menu",1);
    }

    function acumulado()
    {
        if ((premioA==0) && (premioC=="") && (premioR==0)) 
        {
            cadPremioA= "Ninguno";
        }
        
        else
        {
            if (premioA>0) 
            {
                cadPremioA= "Bs. "+premioA ;
            }
            if (premioC!="") 
            {
                if (premioA==0) cadPremioA=  premioC  ;
                else cadPremioA=  "Bs. "+premioA +  " + " + premioC;
            }
            if (premioR>0) 
            {
                if (premioR==1)
                {
                    if ((premioA>0) || (premioC!=""))
                    {
                        cadPremioA=  cadPremioA + " y un boleto gratis";
                    }
                    else 
                    {
                        cadPremioA=  "Un boleto gratis";
                    }
                }
                else 
                {
                    if ((premioA>0) || (premioC!="")) 
                    {
                        cadPremioA=  cadPremioA + " y "+premioR+" boletos gratis";
                    }
                    else 
                    {
                        cadPremioA=  premioR+" boletos gratis";
                    }
                }
            }
        }
    }

    function inicioJugada(cad:String)
    {
        if (cad=="Bingo")
            gotoAndStop("Bingo",1);
        if (cad=="Dados")
        {
            gotoAndStop("Dados",1)	
        }
        if (cad=="Zodiaco")
            gotoAndStop("Zodiaco",1);				
    }
}
