<?php

/**
 * BaseUsuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $cedula
 * @property string $usuario
 * @property string $nombre
 * @property string $apellido
 * @property string $clave
 * @property string $mail
 * @property integer $tipo_id
 * @property boolean $status
 * @property string $ubicacion
 * @property boolean $notificacion
 * @property string $especialidad
 * @property string $consultorio
 * @property timestamp $last_login
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Medico $Medico
 * @property Regular $regulares
 * @property Imc $Imc
 * 
 * @method integer   getId()           Returns the current record's "id" value
 * @method string    getCedula()       Returns the current record's "cedula" value
 * @method string    getUsuario()      Returns the current record's "usuario" value
 * @method string    getNombre()       Returns the current record's "nombre" value
 * @method string    getApellido()     Returns the current record's "apellido" value
 * @method string    getClave()        Returns the current record's "clave" value
 * @method string    getMail()         Returns the current record's "mail" value
 * @method integer   getTipoId()       Returns the current record's "tipo_id" value
 * @method boolean   getStatus()       Returns the current record's "status" value
 * @method string    getUbicacion()    Returns the current record's "ubicacion" value
 * @method boolean   getNotificacion() Returns the current record's "notificacion" value
 * @method string    getEspecialidad() Returns the current record's "especialidad" value
 * @method string    getConsultorio()  Returns the current record's "consultorio" value
 * @method timestamp getLastLogin()    Returns the current record's "last_login" value
 * @method timestamp getCreatedAt()    Returns the current record's "created_at" value
 * @method timestamp getUpdatedAt()    Returns the current record's "updated_at" value
 * @method Medico    getMedico()       Returns the current record's "Medico" value
 * @method Regular   getRegulares()    Returns the current record's "regulares" value
 * @method Imc       getImc()          Returns the current record's "Imc" value
 * @method Usuario   setId()           Sets the current record's "id" value
 * @method Usuario   setCedula()       Sets the current record's "cedula" value
 * @method Usuario   setUsuario()      Sets the current record's "usuario" value
 * @method Usuario   setNombre()       Sets the current record's "nombre" value
 * @method Usuario   setApellido()     Sets the current record's "apellido" value
 * @method Usuario   setClave()        Sets the current record's "clave" value
 * @method Usuario   setMail()         Sets the current record's "mail" value
 * @method Usuario   setTipoId()       Sets the current record's "tipo_id" value
 * @method Usuario   setStatus()       Sets the current record's "status" value
 * @method Usuario   setUbicacion()    Sets the current record's "ubicacion" value
 * @method Usuario   setNotificacion() Sets the current record's "notificacion" value
 * @method Usuario   setEspecialidad() Sets the current record's "especialidad" value
 * @method Usuario   setConsultorio()  Sets the current record's "consultorio" value
 * @method Usuario   setLastLogin()    Sets the current record's "last_login" value
 * @method Usuario   setCreatedAt()    Sets the current record's "created_at" value
 * @method Usuario   setUpdatedAt()    Sets the current record's "updated_at" value
 * @method Usuario   setMedico()       Sets the current record's "Medico" value
 * @method Usuario   setRegulares()    Sets the current record's "regulares" value
 * @method Usuario   setImc()          Sets the current record's "Imc" value
 * 
 * @package    galeno
 * @subpackage model
 * @author     Enimados
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsuario extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('usuario');
        $this->hasColumn('id', 'integer', 6, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 6,
             ));
        $this->hasColumn('cedula', 'string', 9, array(
             'type' => 'string',
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 9,
             ));
        $this->hasColumn('usuario', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('nombre', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('apellido', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('clave', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('mail', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('tipo_id', 'integer', 6, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 6,
             ));
        $this->hasColumn('status', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'default' => true,
             ));
        $this->hasColumn('ubicacion', 'string', 120, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 120,
             ));
        $this->hasColumn('notificacion', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('especialidad', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('consultorio', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('updated_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Medico', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasOne('Regular as regulares', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasOne('Imc', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));
    }
}